{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\Cosmos-Oddysey\\\\cosmos-oddysey-frontend\\\\src\\\\Components\\\\RouteFinder\\\\RouteFinder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Planet from '../Planet/planet.js';\nimport './RouteFinder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RouteFinder() {\n  _s();\n  const [fromPlanet, setFromPlanet] = useState('');\n  const [toPlanet, setToPlanet] = useState('');\n  const [mode, setMode] = useState('selecting');\n  const [routes, setRouteInfo] = useState([]);\n  const [displayLimit, setDisplayLimit] = useState(5);\n  useEffect(() => {\n    if (fromPlanet && toPlanet) {\n      setMode('selected');\n    } else if (fromPlanet) {\n      setMode('deselected');\n    } else {\n      setMode('selecting');\n    }\n  }, [fromPlanet, toPlanet]); // Run the effect whenever the fromPlanet or the toPlanet changes\n\n  // A callback function that updates the fromPlanet and the toPlanet values based on the mode and the planet name\n  const handlePlanetClick = planet => {\n    if (mode === 'selecting') {\n      setFromPlanet(planet);\n    } else if (mode === 'deselected') {\n      setToPlanet(planet);\n    } else if (mode === 'selected') {\n      return;\n    }\n  };\n  const validateForm = event => {\n    event.preventDefault();\n    if (fromPlanet === '' || toPlanet === '' || event.target.value === 'submit') {\n      alert('Please select a planet for both Origin and Destination.');\n      return;\n    }\n    if (fromPlanet === toPlanet && fromPlanet !== '' && toPlanet !== '' && event.target.value === 'submit') {\n      alert('From and To locations cannot be the same planet.');\n      setToPlanet('');\n      return;\n    }\n    searchRoutes();\n  };\n  const handleClearClick = id => {\n    setFromPlanet('');\n    setToPlanet('');\n  };\n  const searchRoutes = () => {\n    const apiURL = process.env.REACT_APP_BACKEND_API_URL;\n    const url = apiURL + `/api/FlightFinder?startLoc=${fromPlanet.toLowerCase()}&endLoc=${toPlanet.toLowerCase()}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setRouteInfo(data);\n      setDisplayLimit(5);\n      console.log(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-finder-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Select an Origin and Destination\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: validateForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planet-container\",\n        children: [/*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Mercury\",\n          onClick: handlePlanetClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Venus\",\n          onClick: handlePlanetClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Earth\",\n          onClick: handlePlanetClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Mars\",\n          onClick: handlePlanetClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Jupiter\",\n          onClick: handlePlanetClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Saturn\",\n          onClick: handlePlanetClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Uranus\",\n          onClick: handlePlanetClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Neptune\",\n          onClick: handlePlanetClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-planets\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Origin: \", fromPlanet || '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Destination: \", toPlanet || '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"search-button\",\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"search-button\",\n          onClick: () => handleClearClick('to'),\n          children: \" Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(RouteFinder, \"TmEy3xMoAe4uQvhpypsrEr+dfMQ=\");\n_c = RouteFinder;\nexport default RouteFinder;\nvar _c;\n$RefreshReg$(_c, \"RouteFinder\");","map":{"version":3,"names":["React","useState","useEffect","Planet","jsxDEV","_jsxDEV","RouteFinder","_s","fromPlanet","setFromPlanet","toPlanet","setToPlanet","mode","setMode","routes","setRouteInfo","displayLimit","setDisplayLimit","handlePlanetClick","planet","validateForm","event","preventDefault","target","value","alert","searchRoutes","handleClearClick","id","apiURL","process","env","REACT_APP_BACKEND_API_URL","url","toLowerCase","fetch","then","response","json","data","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","type","_c","$RefreshReg$"],"sources":["E:/Github/Cosmos-Oddysey/cosmos-oddysey-frontend/src/Components/RouteFinder/RouteFinder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Planet from '../Planet/planet.js';\r\nimport './RouteFinder.css';\r\n\r\nfunction RouteFinder() {\r\n  const [fromPlanet, setFromPlanet] = useState('');\r\n  const [toPlanet, setToPlanet] = useState('');\r\n  const [mode, setMode] = useState('selecting');\r\n  const [routes, setRouteInfo] = useState([]);\r\n  const [displayLimit, setDisplayLimit] = useState(5);\r\n\r\n  useEffect(() => {\r\n    if (fromPlanet && toPlanet) {\r\n      setMode('selected');\r\n    } else if (fromPlanet) {\r\n      setMode('deselected');\r\n    } else {\r\n      setMode('selecting');\r\n    }\r\n  }, [fromPlanet, toPlanet]); // Run the effect whenever the fromPlanet or the toPlanet changes\r\n\r\n  // A callback function that updates the fromPlanet and the toPlanet values based on the mode and the planet name\r\n  const handlePlanetClick = (planet) => {\r\n    if (mode === 'selecting') {\r\n      setFromPlanet(planet);\r\n    } else if (mode === 'deselected') {\r\n      setToPlanet(planet);\r\n    } else if (mode === 'selected') {\r\n      return;\r\n    }\r\n  };\r\n\r\n\r\n  const validateForm = (event) => {\r\n    event.preventDefault();\r\n\r\n    \r\n      if ((fromPlanet === '' || toPlanet === '') || event.target.value === 'submit') {\r\n        alert('Please select a planet for both Origin and Destination.');\r\n        return;\r\n      }\r\n\r\n      if (fromPlanet === toPlanet && fromPlanet !== '' && toPlanet !== '' && event.target.value === 'submit') {\r\n        alert('From and To locations cannot be the same planet.');\r\n        setToPlanet('');\r\n        return;\r\n      }\r\n\r\n      searchRoutes();\r\n    \r\n  };\r\n\r\n  const handleClearClick = (id) => {\r\n      setFromPlanet('');\r\n      setToPlanet('');\r\n  };\r\n\r\n\r\n  const searchRoutes = () => {\r\n    const apiURL = process.env.REACT_APP_BACKEND_API_URL;\r\n    const url = apiURL + `/api/FlightFinder?startLoc=${fromPlanet.toLowerCase()}&endLoc=${toPlanet.toLowerCase()}`;\r\n\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setRouteInfo(data);\r\n        setDisplayLimit(5);\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"route-finder-container\">\r\n      <h1>Select an Origin and Destination</h1>\r\n      <form onSubmit={validateForm}>\r\n        <div className=\"planet-container\">\r\n          <Planet\r\n            planet=\"Mercury\"\r\n            onClick={handlePlanetClick}\r\n          />\r\n          <Planet\r\n            planet=\"Venus\"\r\n            onClick={handlePlanetClick}\r\n          />\r\n          <Planet\r\n            planet=\"Earth\"\r\n            onClick={handlePlanetClick}\r\n          />\r\n          <Planet\r\n            planet=\"Mars\"\r\n            onClick={handlePlanetClick}\r\n          />\r\n          <Planet\r\n            planet=\"Jupiter\"\r\n            onClick={handlePlanetClick}\r\n          />\r\n          <Planet\r\n            planet=\"Saturn\"\r\n            onClick={handlePlanetClick}\r\n          />\r\n          <Planet\r\n            planet=\"Uranus\"\r\n            onClick={handlePlanetClick}\r\n          />\r\n          <Planet\r\n            planet=\"Neptune\"\r\n            onClick={handlePlanetClick}\r\n          />\r\n        </div>\r\n        <div className=\"selected-planets\">\r\n          <p>Origin: {fromPlanet || ''}</p>\r\n          <p>Destination: {toPlanet || ''}</p>\r\n        </div>\r\n        <div className=\"buttons\">\r\n        <span className=\"search-button\" type=\"submit\">Search</span>\r\n        <span\r\n          className=\"search-button\"\r\n          onClick={() => handleClearClick('to')}> Clear\r\n        </span>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RouteFinder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}