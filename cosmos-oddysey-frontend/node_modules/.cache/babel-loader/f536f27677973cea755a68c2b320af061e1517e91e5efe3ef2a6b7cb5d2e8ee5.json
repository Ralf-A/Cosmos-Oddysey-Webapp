{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github\\\\Cosmos-Oddysey\\\\cosmos-oddysey-frontend\\\\src\\\\Components\\\\RouteFinder\\\\RouteFinder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Planet from '../Planet/planet.js';\nimport './RouteFinder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RouteFinder() {\n  _s();\n  const [fromPlanet, setFromPlanet] = useState('');\n  const [toPlanet, setToPlanet] = useState('');\n  const [mode, setMode] = useState('selecting');\n  const [routes, setRouteInfo] = useState([]);\n  const [displayLimit, setDisplayLimit] = useState(5);\n  useEffect(() => {\n    if (fromPlanet && toPlanet) {\n      setMode('selected');\n    } else if (fromPlanet) {\n      setMode('deselected');\n    } else {\n      setMode('selecting');\n    }\n  }, [fromPlanet, toPlanet]);\n  const handlePlanetClick = planet => {\n    if (mode === 'selecting') {\n      setFromPlanet(planet);\n      setMode('deselected');\n    } else if (mode === 'deselected') {\n      setToPlanet(planet);\n      setMode('selected');\n    } else if (mode === 'selected') {\n      return;\n    }\n  };\n  const validateForm = event => {\n    event.preventDefault();\n    if (event.nativeEvent.submitter.type === 'submit') {\n      if (fromPlanet === '' && toPlanet === '') {\n        return;\n      }\n      if (fromPlanet === '' || toPlanet === '') {\n        alert('Please select a planet for both Origin and Destination.');\n        return;\n      }\n      if (fromPlanet === toPlanet) {\n        alert('From and To locations cannot be the same planet.');\n        return;\n      }\n      searchRoutes();\n    }\n  };\n  const searchRoutes = () => {\n    const apiURL = process.env.REACT_APP_BACKEND_API_URL;\n    const url = apiURL + `/api/FlightFinder?startLoc=${fromPlanet}&endLoc=${toPlanet}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setRouteInfo(data);\n      setDisplayLimit(5);\n      console.log(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-finder-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Routes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: validateForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planet-container\",\n        children: [/*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Mercury\",\n          onClick: () => handlePlanetClick(\"Mercury\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Venus\",\n          onClick: () => handlePlanetClick(\"Venus\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Earth\",\n          onClick: () => handlePlanetClick(\"Earth\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Mars\",\n          onClick: () => handlePlanetClick(\"Mars\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Jupiter\",\n          onClick: () => handlePlanetClick(\"Jupiter\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Saturn\",\n          onClick: () => handlePlanetClick(\"Saturn\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Uranus\",\n          onClick: () => handlePlanetClick(\"Uranus\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Planet, {\n          planet: \"Neptune\",\n          onClick: () => handlePlanetClick(\"Neptune\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-planets\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Origin: \", fromPlanet || 'None']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Destination: \", toPlanet || 'None']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(RouteFinder, \"TmEy3xMoAe4uQvhpypsrEr+dfMQ=\");\n_c = RouteFinder;\nexport default RouteFinder;\nvar _c;\n$RefreshReg$(_c, \"RouteFinder\");","map":{"version":3,"names":["React","useState","useEffect","Planet","jsxDEV","_jsxDEV","RouteFinder","_s","fromPlanet","setFromPlanet","toPlanet","setToPlanet","mode","setMode","routes","setRouteInfo","displayLimit","setDisplayLimit","handlePlanetClick","planet","validateForm","event","preventDefault","nativeEvent","submitter","type","alert","searchRoutes","apiURL","process","env","REACT_APP_BACKEND_API_URL","url","fetch","then","response","json","data","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","_c","$RefreshReg$"],"sources":["E:/Github/Cosmos-Oddysey/cosmos-oddysey-frontend/src/Components/RouteFinder/RouteFinder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Planet from '../Planet/planet.js';\r\nimport './RouteFinder.css'; \r\nfunction RouteFinder() {\r\n  const [fromPlanet, setFromPlanet] = useState('');\r\n  const [toPlanet, setToPlanet] = useState('');\r\n  const [mode, setMode] = useState('selecting');\r\n  const [routes, setRouteInfo] = useState([]);\r\n  const [displayLimit, setDisplayLimit] = useState(5);\r\n\r\n  useEffect(() => {\r\n    if (fromPlanet && toPlanet) {\r\n      setMode('selected');\r\n    } else if (fromPlanet) {\r\n      setMode('deselected');\r\n    } else {\r\n      setMode('selecting');\r\n    }\r\n  }, [fromPlanet, toPlanet]); \r\n  const handlePlanetClick = (planet) => {\r\n    if (mode === 'selecting') {\r\n      setFromPlanet(planet);\r\n      setMode('deselected'); \r\n    } else if (mode === 'deselected') {\r\n      setToPlanet(planet);\r\n      setMode('selected'); \r\n    } else if (mode === 'selected') {\r\n      return;\r\n    }\r\n  };\r\n  \r\n\r\n  const validateForm = (event) => {\r\n    event.preventDefault();\r\n  \r\n    if (event.nativeEvent.submitter.type === 'submit') {\r\n      if (fromPlanet === '' && toPlanet === '') {\r\n        return;\r\n      }\r\n  \r\n      if (fromPlanet === '' || toPlanet === '') {\r\n        alert('Please select a planet for both Origin and Destination.');\r\n        return;\r\n      }\r\n  \r\n      if (fromPlanet === toPlanet) {\r\n        alert('From and To locations cannot be the same planet.');\r\n        return;\r\n      }\r\n  \r\n      searchRoutes();\r\n    }\r\n  };\r\n  \r\n\r\n  const searchRoutes = () => {\r\n    const apiURL = process.env.REACT_APP_BACKEND_API_URL;\r\n    const url = apiURL + `/api/FlightFinder?startLoc=${fromPlanet}&endLoc=${toPlanet}`;\r\n\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setRouteInfo(data);\r\n        setDisplayLimit(5);\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"route-finder-container\">\r\n      <h2>Search Routes</h2>\r\n      <form onSubmit={validateForm}>\r\n        <div className=\"planet-container\">\r\n          <Planet planet=\"Mercury\" onClick={() => handlePlanetClick(\"Mercury\")} />\r\n          <Planet planet=\"Venus\" onClick={() => handlePlanetClick(\"Venus\")} />\r\n          <Planet planet=\"Earth\" onClick={() => handlePlanetClick(\"Earth\")} />\r\n          <Planet planet=\"Mars\" onClick={() => handlePlanetClick(\"Mars\")} />\r\n          <Planet planet=\"Jupiter\" onClick={() => handlePlanetClick(\"Jupiter\")} />\r\n          <Planet planet=\"Saturn\" onClick={() => handlePlanetClick(\"Saturn\")} />\r\n          <Planet planet=\"Uranus\" onClick={() => handlePlanetClick(\"Uranus\")} />\r\n          <Planet planet=\"Neptune\" onClick={() => handlePlanetClick(\"Neptune\")} />\r\n        </div>\r\n        <div className=\"selected-planets\">\r\n          <p>Origin: {fromPlanet || 'None'}</p>\r\n          <p>Destination: {toPlanet || 'None'}</p>\r\n        </div>\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RouteFinder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}