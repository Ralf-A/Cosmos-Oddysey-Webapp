{"ast":null,"code":"import\"./FlightInfo.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FlightInfo(_ref){let{flightInfo}=_ref;const originDepartureTime=new Date(flightInfo[0].departureTime);const destinationArrivalTime=new Date(flightInfo[flightInfo.length-1].arrivalTime);var flightDurationMilliseconds=destinationArrivalTime-originDepartureTime;var flightDurationDays=Math.floor(flightDurationMilliseconds/(1000*60*60*24));// Find total distance of flight (sum of all distances between stops)\nvar flightDistance=0;for(var i=0;i<flightInfo.length;i++){flightDistance+=flightInfo[i].distance;}// Find total cost of flight (sum of all costs between stops)\nvar flightCost=0;for(var i=0;i<flightInfo.length;i++){flightCost+=flightInfo[i]['price'];}flightCost=Math.round(flightCost*100)/100;// Find which planets are visited\nvar visitedPlanets=[];for(var i=0;i<flightInfo.length;i++){if(!visitedPlanets.includes(flightInfo[i]['origin'])){visitedPlanets.push(flightInfo[i]['origin']);}if(!visitedPlanets.includes(flightInfo[i]['destination'])){visitedPlanets.push(flightInfo[i]['destination']);}}// Find which companies are used\nvar usedCompanies=[];for(var i=0;i<flightInfo.length;i++){if(!usedCompanies.includes(flightInfo[i]['companyName'])){usedCompanies.push(flightInfo[i]['companyName']);}}return/*#__PURE__*/_jsx(\"div\",{className:\"flight_info_container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flight_info_body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flight_info_body_item\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Departure time\"}),/*#__PURE__*/_jsx(\"p\",{children:originDepartureTime.toLocaleString()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight_info_body_item\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Arrival time\"}),/*#__PURE__*/_jsx(\"p\",{children:destinationArrivalTime.toLocaleString()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight_info_body_item\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Duration\"}),/*#__PURE__*/_jsxs(\"p\",{children:[flightDurationDays,\" Days\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight_info_body_item\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Distance :\"}),/*#__PURE__*/_jsxs(\"p\",{children:[flightDistance,\" Kilometers\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight_info_body_item\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Cost\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"$\",flightCost]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight_info_body_item\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Route\"}),/*#__PURE__*/_jsx(\"p\",{children:visitedPlanets.join(' -> ')})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flight_info_body_item\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Companies Used\"}),/*#__PURE__*/_jsx(\"p\",{children:usedCompanies.join(', ')})]})]})});}export default FlightInfo;","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","FlightInfo","_ref","flightInfo","originDepartureTime","Date","departureTime","destinationArrivalTime","length","arrivalTime","flightDurationMilliseconds","flightDurationDays","Math","floor","flightDistance","i","distance","flightCost","round","visitedPlanets","includes","push","usedCompanies","className","children","toLocaleString","join"],"sources":["E:/Github/Cosmos-Oddysey/cosmos-oddysey-frontend/src/Components/Flight/FlightInfo.js"],"sourcesContent":["import \"./FlightInfo.css\";\r\n\r\nfunction FlightInfo({flightInfo}) {\r\n\r\n    const originDepartureTime = new Date(flightInfo[0].departureTime);\r\n    const destinationArrivalTime = new Date(flightInfo[flightInfo.length - 1].arrivalTime);\r\n\r\n    var flightDurationMilliseconds = destinationArrivalTime - originDepartureTime;\r\n    var flightDurationDays = Math.floor(flightDurationMilliseconds / (1000 * 60 * 60 * 24));\r\n\r\n    // Find total distance of flight (sum of all distances between stops)\r\n    var flightDistance = 0;\r\n    for (var i = 0; i < flightInfo.length; i++) {\r\n        flightDistance += flightInfo[i].distance;\r\n    }\r\n\r\n    // Find total cost of flight (sum of all costs between stops)\r\n    var flightCost = 0;\r\n    for (var i = 0; i < flightInfo.length; i++) {\r\n        flightCost += flightInfo[i]['price'];\r\n    }\r\n    flightCost = Math.round(flightCost * 100) / 100;\r\n\r\n    // Find which planets are visited\r\n    var visitedPlanets = [];\r\n    for (var i = 0; i < flightInfo.length; i++) {\r\n        if (!visitedPlanets.includes(flightInfo[i]['origin'])) {\r\n            visitedPlanets.push(flightInfo[i]['origin']);\r\n        }\r\n        if (!visitedPlanets.includes(flightInfo[i]['destination'])) {\r\n            visitedPlanets.push(flightInfo[i]['destination']);\r\n        }\r\n    }\r\n\r\n    // Find which companies are used\r\n    var usedCompanies = [];\r\n    for (var i = 0; i < flightInfo.length; i++) {\r\n        if (!usedCompanies.includes(flightInfo[i]['companyName'])) {\r\n            usedCompanies.push(flightInfo[i]['companyName']);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"flight_info_container\">\r\n            <div className=\"flight_info_body\">\r\n                <div className=\"flight_info_body_item\">\r\n                    <h2>Departure time</h2>\r\n                    <p>{originDepartureTime.toLocaleString()}</p>\r\n                </div>\r\n                <div className=\"flight_info_body_item\">\r\n                    <h2>Arrival time</h2>\r\n                    <p>{destinationArrivalTime.toLocaleString()}</p>\r\n                </div>\r\n                <div className=\"flight_info_body_item\">\r\n                    <h2>Duration</h2>\r\n                    <p>{flightDurationDays} Days</p>\r\n                </div>\r\n                <div className=\"flight_info_body_item\">\r\n                    <h2>Distance :</h2>\r\n                    <p>{flightDistance} Kilometers</p>\r\n                </div>\r\n                <div className=\"flight_info_body_item\">\r\n                    <h2>Cost</h2>\r\n                    <p>${flightCost}</p>\r\n                </div>\r\n                <div className=\"flight_info_body_item\">\r\n                    <h2>Route</h2>\r\n                    <p>{visitedPlanets.join(' -> ')}</p>\r\n                </div>\r\n                <div className=\"flight_info_body_item\">\r\n                    <h2>Companies Used</h2>\r\n                    <p>{usedCompanies.join(', ')}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FlightInfo;"],"mappings":"AAAA,MAAO,kBAAkB,CAAC,OAAAA,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAe,IAAd,CAACC,UAAU,CAAC,CAAAD,IAAA,CAE5B,KAAM,CAAAE,mBAAmB,CAAG,GAAI,CAAAC,IAAI,CAACF,UAAU,CAAC,CAAC,CAAC,CAACG,aAAa,CAAC,CACjE,KAAM,CAAAC,sBAAsB,CAAG,GAAI,CAAAF,IAAI,CAACF,UAAU,CAACA,UAAU,CAACK,MAAM,CAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAEtF,GAAI,CAAAC,0BAA0B,CAAGH,sBAAsB,CAAGH,mBAAmB,CAC7E,GAAI,CAAAO,kBAAkB,CAAGC,IAAI,CAACC,KAAK,CAACH,0BAA0B,EAAI,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,CAAC,CAEvF;AACA,GAAI,CAAAI,cAAc,CAAG,CAAC,CACtB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGZ,UAAU,CAACK,MAAM,CAAEO,CAAC,EAAE,CAAE,CACxCD,cAAc,EAAIX,UAAU,CAACY,CAAC,CAAC,CAACC,QAAQ,CAC5C,CAEA;AACA,GAAI,CAAAC,UAAU,CAAG,CAAC,CAClB,IAAK,GAAI,CAAAF,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGZ,UAAU,CAACK,MAAM,CAAEO,CAAC,EAAE,CAAE,CACxCE,UAAU,EAAId,UAAU,CAACY,CAAC,CAAC,CAAC,OAAO,CAAC,CACxC,CACAE,UAAU,CAAGL,IAAI,CAACM,KAAK,CAACD,UAAU,CAAG,GAAG,CAAC,CAAG,GAAG,CAE/C;AACA,GAAI,CAAAE,cAAc,CAAG,EAAE,CACvB,IAAK,GAAI,CAAAJ,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGZ,UAAU,CAACK,MAAM,CAAEO,CAAC,EAAE,CAAE,CACxC,GAAI,CAACI,cAAc,CAACC,QAAQ,CAACjB,UAAU,CAACY,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAE,CACnDI,cAAc,CAACE,IAAI,CAAClB,UAAU,CAACY,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAChD,CACA,GAAI,CAACI,cAAc,CAACC,QAAQ,CAACjB,UAAU,CAACY,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAE,CACxDI,cAAc,CAACE,IAAI,CAAClB,UAAU,CAACY,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CACrD,CACJ,CAEA;AACA,GAAI,CAAAO,aAAa,CAAG,EAAE,CACtB,IAAK,GAAI,CAAAP,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGZ,UAAU,CAACK,MAAM,CAAEO,CAAC,EAAE,CAAE,CACxC,GAAI,CAACO,aAAa,CAACF,QAAQ,CAACjB,UAAU,CAACY,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAE,CACvDO,aAAa,CAACD,IAAI,CAAClB,UAAU,CAACY,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CACpD,CACJ,CACA,mBACIjB,IAAA,QAAKyB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,cAClCxB,KAAA,QAAKuB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7BxB,KAAA,QAAKuB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClC1B,IAAA,OAAA0B,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvB1B,IAAA,MAAA0B,QAAA,CAAIpB,mBAAmB,CAACqB,cAAc,CAAC,CAAC,CAAI,CAAC,EAC5C,CAAC,cACNzB,KAAA,QAAKuB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClC1B,IAAA,OAAA0B,QAAA,CAAI,cAAY,CAAI,CAAC,cACrB1B,IAAA,MAAA0B,QAAA,CAAIjB,sBAAsB,CAACkB,cAAc,CAAC,CAAC,CAAI,CAAC,EAC/C,CAAC,cACNzB,KAAA,QAAKuB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClC1B,IAAA,OAAA0B,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBxB,KAAA,MAAAwB,QAAA,EAAIb,kBAAkB,CAAC,OAAK,EAAG,CAAC,EAC/B,CAAC,cACNX,KAAA,QAAKuB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClC1B,IAAA,OAAA0B,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBxB,KAAA,MAAAwB,QAAA,EAAIV,cAAc,CAAC,aAAW,EAAG,CAAC,EACjC,CAAC,cACNd,KAAA,QAAKuB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClC1B,IAAA,OAAA0B,QAAA,CAAI,MAAI,CAAI,CAAC,cACbxB,KAAA,MAAAwB,QAAA,EAAG,GAAC,CAACP,UAAU,EAAI,CAAC,EACnB,CAAC,cACNjB,KAAA,QAAKuB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClC1B,IAAA,OAAA0B,QAAA,CAAI,OAAK,CAAI,CAAC,cACd1B,IAAA,MAAA0B,QAAA,CAAIL,cAAc,CAACO,IAAI,CAAC,MAAM,CAAC,CAAI,CAAC,EACnC,CAAC,cACN1B,KAAA,QAAKuB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClC1B,IAAA,OAAA0B,QAAA,CAAI,gBAAc,CAAI,CAAC,cACvB1B,IAAA,MAAA0B,QAAA,CAAIF,aAAa,CAACI,IAAI,CAAC,IAAI,CAAC,CAAI,CAAC,EAChC,CAAC,EACL,CAAC,CACL,CAAC,CAEd,CAEA,cAAe,CAAAzB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}